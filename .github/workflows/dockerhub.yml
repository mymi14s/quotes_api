name: Build and Push Docker Image

on:
  push:
    branches:
      - development
      - production
  pull_request:
    branches:
      - production

jobs:
  build-on-development:
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out repository
      uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: false
        tags:: |
          mymi14s/quotes-api:${{ github.run_number }}
          mymi14s/quotes-api:latest
          
    - name: Test Docker image
      run: |
        docker image ls
        if docker image ls | grep -q mymi14s/quotes-api; then
            echo "Image found"
        else
            echo "Image not found"
            exit 1
        fi
        docker run -d --name=quotes-api-test -p8000:8000 mymi14s/quotes-api:latest
        sleep 10  # Give the container time to start up
        curl -s -o /dev/null -w "%{http_code}" http://localhost:8000 | grep 200 || exit 1
        docker logs quotes-api-test
        docker stop quotes-api-test
        docker rm quotes-api-test

    - name: Build and push Docker image
      if: github.ref == 'refs/heads/production' && github.event_name == 'merge'
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags:: |
            mymi14s/quotes-api:${{ github.run_number }}
            mymi14s/quotes-api:latest